services:
  app:
    build: . # Builds the Docker image for the app service from the current directory
    ports:
      - "8000:80" # Maps port 8000 on the host to port 80 in the container
    environment:
      - IRB_DATABASE_PATH=postgresql+psycopg2://postgres:password@db/postgres # Database connection string
      - IRB_REPOSITORY_URL=http://127.0.0.1:80/static/ # URL for the repository
      - IRB_ROOT=/
      - IRB_API_KEY=3456345-456-456 # API key for authentication
      - IRB_DOMAIN=https://alg.ibr.cs.tu-bs.de # For CORS
    volumes:
      - ./REPOSITORY:/app/REPOSITORY # Mounts the local REPOSITORY directory to /app/REPOSITORY in the container
    depends_on:
      - db # Ensures the db service is started before the app service

  db:
    image: postgres:16 # Uses the official PostgreSQL 16 image
    environment:
      POSTGRES_USER: postgres # Sets the PostgreSQL user
      POSTGRES_PASSWORD: password # Sets the PostgreSQL password
      POSTGRES_DB: postgres # Sets the PostgreSQL database name
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persists PostgreSQL data in a Docker volume

  nginx:
    image: nginx:latest # Uses the official Nginx latest image
    ports:
      - "80:80" # Maps port 80 on the host to port 80 in the container
    volumes:
      - ./REPOSITORY:/usr/share/nginx/html/static # Mounts the local REPOSITORY directory to /usr/share/nginx/html/static in the container
      - ./nginx.dev.conf:/etc/nginx/nginx.conf # Mounts the local nginx.conf file to /etc/nginx/nginx.conf in the container
    depends_on:
      - app # Ensures the app service is started before the nginx service

volumes:
  postgres_data: # Defines a Docker volume named postgres_data for persisting PostgreSQL data
