events {}

http {
    client_max_body_size 25m;

    server {
        listen 80;

        location /static/ {
            alias /usr/share/nginx/html/static/;
            # The following part is optional and allows to crawl the directory directly
            autoindex on;  # Enable directory listing
            autoindex_exact_size off;  # Show file sizes in human-readable format
            autoindex_localtime on;  # Show file modification times in local time

            # Ignore hidden files and files starting with __
            if ($request_uri ~* "/\..*/|/__.*") {
                return 404;
            }

        }

        location / {
            proxy_pass http://app:80/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    # Note: To set up HTTPS, you need to:
    # 1. Obtain an SSL certificate (e.g., from Let's Encrypt).
    # 2. Configure the server to listen on port 443 for HTTPS traffic.
    # 3. Add the SSL certificate and key file paths.
    # 4. Redirect HTTP traffic to HTTPS if desired.

    # Example HTTPS configuration:
    #
    # server {
    #     listen 443 ssl;
    #     server_name your_domain.com;
    #
    #     ssl_certificate /path/to/your/certificate.crt;
    #     ssl_certificate_key /path/to/your/private.key;
    #
    #     location /static/ {
    #         alias /usr/share/nginx/html/static/;
    #         autoindex on;
    #         autoindex_exact_size off;
    #         autoindex_localtime on;
    #     }
    #
    #     location / {
    #         proxy_pass http://app:80;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
    #
    # server {
    #     listen 80;
    #     server_name your_domain.com;
    #
    #     location / {
    #         return 301 https://$host$request_uri;
    #     }
    # }
}
